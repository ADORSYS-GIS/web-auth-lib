(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))n(t);new MutationObserver(t=>{for(const o of t)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function e(t){const o={};return t.integrity&&(o.integrity=t.integrity),t.referrerPolicy&&(o.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?o.credentials="include":t.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function n(t){if(t.ep)return;t.ep=!0;const o=e(t);fetch(t.href,o)}})();const I="/icon.jpg";function B(s){const r=String.fromCharCode.apply(null,new Uint8Array(s));return window.btoa(r)}class g{generateSalt(){return crypto.getRandomValues(new Uint8Array(16))}async register(r){try{const e=await navigator.credentials.create({publicKey:r});if(!e||!e.rawId)throw new Error("Registration failed: No credential returned.");const n=this.generateSalt();return localStorage.setItem("registrationSalt",B(n.buffer)),{credentialId:e.rawId,rawCredential:e}}catch(e){throw new Error(`Registration error: ${e.message}`)}}async authenticate(r){var e,n;try{const t=await navigator.credentials.get({publicKey:r});if(!t)throw new Error("Authentication failed: No assertion returned.");if(!localStorage.getItem("registrationSalt"))throw new Error("No stored salt found for authentication.");const a=t.getClientExtensionResults();if(!((n=(e=a==null?void 0:a.prf)==null?void 0:e.results)!=null&&n.first))throw new Error("PRF result missing in the assertion.");const c=new Uint8Array(a.prf.results.first);return{assertion:t,prfResult:c}}catch(t){throw new Error(`Authentication error: ${t.message}`)}}}class m{async deriveKey(r,e){try{const n=await crypto.subtle.importKey("raw",r,{name:"HKDF"},!1,["deriveKey"]);return await crypto.subtle.deriveKey({name:"HKDF",hash:"SHA-256",salt:e,info:new Uint8Array([1,2,3,4])},n,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"])}catch(n){throw new Error(`Key derivation error: ${n.message}`)}}}class p{async encryptData(r,e){try{const t=new TextEncoder().encode(r),o=crypto.getRandomValues(new Uint8Array(12)),a=await crypto.subtle.encrypt({name:"AES-GCM",iv:o},e.key,t),c=new Uint8Array(o.length+a.byteLength);return c.set(o),c.set(new Uint8Array(a),o.length),c.buffer}catch(n){throw new Error(`Encryption error: ${n.message}`)}}async decryptData(r,e){try{const n=new Uint8Array(r),t=n.slice(0,12),o=n.slice(12),a=await crypto.subtle.decrypt({name:"AES-GCM",iv:t},e.key,o);return new TextDecoder().decode(a)}catch(n){throw new Error(`Decryption error: ${n.message}`)}}}const f="localhost";function w(s){const r=String.fromCharCode(...new Uint8Array(s));return window.btoa(r)}function d(s){const r=atob(s),e=r.length,n=new Uint8Array(e);for(let t=0;t<e;t++)n[t]=r.charCodeAt(t);return n}function h(){const s=JSON.parse(localStorage.getItem("messages")||"[]"),r=document.querySelector("#messageList");r.innerHTML=s.map(e=>`<li>${e}</li>`).join("")}async function E(){const s=document.querySelector("#messageInput"),r=s.value.trim();if(r){const e=JSON.parse(localStorage.getItem("messages")||"[]"),n=new m,t=localStorage.getItem("registrationSalt"),o=t?d(t):new Uint8Array,a={key:await n.deriveKey(new Uint8Array(32),new Uint8Array(o))},i=await new p().encryptData(r,a);e.push(w(i)),localStorage.setItem("messages",JSON.stringify(e)),s.value="",h()}}async function L(){const s=new g,r={challenge:crypto.getRandomValues(new Uint8Array(32)).buffer,rp:{name:"Localhost, Inc",id:f},user:{id:crypto.getRandomValues(new Uint8Array(16)),name:"",displayName:""},pubKeyCredParams:[{type:"public-key",alg:-7},{type:"public-key",alg:-257}],timeout:6e4,authenticatorSelection:{authenticatorAttachment:"cross-platform",residentKey:"required"},extensions:{prf:{eval:{first:new Uint8Array(32).fill(1)}}}};try{const e=await s.register(r);console.log("Credential registered:",e.credentialId);const n=w(e.credentialId);localStorage.setItem("credentialId",n)}catch(e){console.error("Error in process:",e.message),document.getElementById("error").textContent=e.message}}async function U(){const s=new g,r=new m,e=new p,n=localStorage.getItem("credentialId");if(!n){console.error("No stored credentialId found."),document.getElementById("error").textContent="No stored credentialId found.";return}const t=d(n),o=localStorage.getItem("registrationSalt");if(!o){console.error("No stored salt found."),document.getElementById("error").textContent="No stored salt found.";return}const a=d(o),c={challenge:crypto.getRandomValues(new Uint8Array(32)).buffer,allowCredentials:[{type:"public-key",id:t}],timeout:6e4,rpId:f,extensions:{prf:{eval:{first:new Uint8Array(32).fill(1)}}}};try{const i=await s.authenticate(c);console.log("PRF output received:",i.prfResult);const b={key:await r.deriveKey(new Uint8Array(32),new Uint8Array(a))},v=JSON.parse(localStorage.getItem("messages")||"[]"),u=await Promise.all(v.map(async l=>{const A=new Uint8Array(d(l));try{return console.log("Attempting to decrypt message:",l),await e.decryptData(A.buffer,b)}catch(y){return console.error("Decryption failed for message:",l,y),"Decryption failed"}})),S=document.querySelector("#messageList");S.innerHTML=u.map(l=>`<li>${l}</li>`).join(""),console.log("Decrypted messages:",u),h()}catch(i){console.error("Error in process:",i.message),document.getElementById("error").textContent=i.message}}function C(){console.log("User logged out. Credential and messages removed."),document.getElementById("error").textContent="Logged out successfully."}async function x(){var s,r,e,n;(s=document.getElementById("registerBtn"))==null||s.addEventListener("click",L),(r=document.getElementById("authenticateBtn"))==null||r.addEventListener("click",U),(e=document.getElementById("logoutBtn"))==null||e.addEventListener("click",C),(n=document.getElementById("saveMessageBtn"))==null||n.addEventListener("click",E)}document.querySelector("#app").innerHTML=`
  <div class="container mx-auto px-4 py-8 flex flex-col items-center gap-8">
    <div class="content-box">
      <a href="/" target="_blank">
        <img src="${I}" class="logo" alt="logo" />
      </a>
      <h1 class="text-center">WebAuthn PRF</h1>
      <div class="flex justify-center gap-6">   
        <button id="registerBtn" type="button" class="btn btn-primary btn-soft">Register</button>
        <button id="authenticateBtn" type="button" class="btn btn-primary btn-soft">Authenticate</button>
        <button id="logoutBtn" type="button" class="btn btn-primary btn-soft">Logout</button>
      </div>
      <div class="w-full overflow-scroll" id="error"></div>

      <!-- Message input and save button -->
      <input id="messageInput" type="text" placeholder="Enter a message" class="input" />
      <button id="saveMessageBtn" class="btn btn-primary">Save Message</button>

      <!-- Display saved messages -->
      <ul id="messageList" class="w-full overflow-scroll"></ul>
    </div>
  </div>
`;x().catch(console.error);
